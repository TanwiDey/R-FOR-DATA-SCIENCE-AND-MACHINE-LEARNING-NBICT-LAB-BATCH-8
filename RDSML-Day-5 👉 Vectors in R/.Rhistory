# SIMPLE MATHEMATICAL OPERATORS IN R
Z =
# SIMPLE MATHEMATICAL OPERATORS IN R
Z = 6+9 - 8*2 / 3
print(Z)
# SIMPLE MATHEMATICAL OPERATORS IN R
Z = 6+9 - 8*2 / 3
print(Z)
W = 4+3-3
W = 4+3-3*2/3
print(W)
W = (4+3-3)*2/3
(W)
11/5
11%%5
11 %/%
11 %/%
11%/%
11%/%5
#calculating some health parameter
my_age = 97
my_weight = 60
my_height = 65
x = (my_height * my_age)/ my_weight
print(x)
students_height = c(50, 55, 64, 71, 45.25, 50)
mean(students_height)
# SIMPLE MATHEMATICAL OPERATORS IN R
Z = 6+9 - 8*2 / 3
print(Z)
W = (4+3-3)*2/3
print(W)
11/5
11%%5
11%/%5
detach("package:base", unload = TRUE)
studen.height= c(60, 69, 55,62)
studen.height
#checking the class of the vector student.height
class(studen.height)
#is.numeric() function can be used to check data type
is.numeric(studen.height)
is.logical(studen.height)
b = c(5,8,2, 'TD')
b
is.numeric(b)
is.character(b)
# all number has been transfer to character/textb data type
#we can convert data types which are vector based data type
# numeric to character always but character to numeric conversion not always possible
a <-c(1,2,3,4,5)
class(a)
is.numeric(a)
# to convert numeric to character type as.character(a)
as.character(a)
a= as.character(a)
#Vectors in R
# Creating vector using C() command
studen.height= c(60, 69, 55,62)
studen.height
#checking the class of the vector student.height
class(studen.height)
#is.numeric() function can be used to check data type
is.numeric(studen.height)
# R automatically convert numeric to text, when you have a text item in the vector
vector b is a vector having data numeric and character text both =c(5, 8, 2, "TD")
b = c(5,8,2, 'TD')
is.numeric(b)
is.character(b)
# all number has been transfer to character/textb data type
#we can convert data types which are vector based data type
# numeric to character always but character to numeric conversion not always possible
a <-c(1,2,3,4,5)
class(a)
is.numeric(a)
# to convert numeric to character type as.character(a)
as.character(a)
a= as.character(a)
a
(a)
class(a)
studen.height= c(60, 69, 55,62)
studen.height
#checking the class of the vector student.height
class(studen.height)
#is.numeric() function can be used to check data type
is.numeric(studen.height)
b = c(5,8,2, 'TD')
is.character(b)
# all number has been transfer to character/textb data type
#we can convert data types which are vector based data type
# numeric to character always but character to numeric conversion not always possible
a <-c(1,2,3,4,5)
is.numeric(a)
as.character(a)
a= as.character(a)
a
class(a)
studen.height= c(60, 69, 55,62)
studen.height
class(studen.height)
is.numeric(studen.height)
b = c(5,8,2, 'TD')
is.numeric(b)
is.character(b)
a <-c(1,2,3,4,5)
class(a)
is.numeric(a)
as.character(a)
a= as.character(a)
a
class(a)
as.numeric(d)
d= c(TRUE, FALSE, FALSE, TRUE, FALSE)
d= as.numeric(d)
d
#converting numeric to logical (1 or any number other than
#0 converts to TRUE, 0 converts to FALSE)
d
as.logical(d)
e=c(1,0,0,1,0, 23, -7, 0)
e=as.logical(e)
e
#creating sequential vetors,likely a vector start from 1 to 10
#
my_seq=c(1:10)
my_seq=c(1:100)
my_seq
my_seq2=c(1:50, 12, 24,56, 23, 70:100)
my_seq2
new_seq=c(seq(1,10))
new_seq
# sequence in a steps of 3,such as 3,6,9,12
new_seq= c(seq(1,10, by=3))
new_seq
#vector can have character , numeric , logical etc any data  type
name=c("Elias, mafhuja, AFRAF, CHAITY")
name
class(name)
names(3)
name[3]
name
name[3]
class(name)
name[3]
name=c("Elias", "mafhuja", "AFRAF", "CHAITY")
name(3)
name=c("Elias", "mafhuja", "AFRAF", "CHAITY")
name[3]
name[3:4]
setwd("C:/Users/Asus/OneDrive/NBICT/New folder/R-FOR-DATA-SCIENCE-AND-MACHINE-LEARNING-NBICT-LAB-BATCH-8/RDSML-Day-5 ðŸ‘‰ Vectors in R")
#assiging names to vector values
my_values=c(4, 7, 9, 11)
names((my_values)=c ("a", "b", "c", "d")
#assiging names to vector values such as 4=a,5=b
my_values=c(4, 7, 9, 11)
names((my_values)=c ("a", "b", "c", "d")
names(my_values) = c ("a", "b", "c", "d")
my_values
